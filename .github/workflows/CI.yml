name: CI

on:
  push:
    branches:
      - main

jobs:
  # Job for Pull Requests: Runs only on Ubuntu
  test-pr:
    name: Test on Ubuntu (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage
          pip install -e .

      - name: Run tests with coverage
        run: |
          echo "[run]" > .coveragerc
          echo "omit = */RCAIDE/Framework/External_Interfaces/*" >> .coveragerc
          echo "       */RCAIDE/Library/Methods/Aerodynamics/Athena_Vortex_Lattice/*" >> .coveragerc
          pytest --cov=RCAIDE --cov-report=xml -v

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: leadsgroup/RCAIDE_LEADS

  # Job for Pushes: Runs on Ubuntu, macOS, and Windows
  test-push:
    name: Test on Multiple OS (Push)
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9","3.10", "3.11", "3.12"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage
          pip install -e .

      - name: Run tests with coverage
        run: |
          echo "[run]" > .coveragerc
          echo "omit = */RCAIDE/Framework/External_Interfaces/*" >> .coveragerc
          echo "       */RCAIDE/Library/Methods/Aerodynamics/Athena_Vortex_Lattice/*" >> .coveragerc
          pytest --cov=RCAIDE --cov-report=xml -v

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: leadsgroup/RCAIDE_LEADS

