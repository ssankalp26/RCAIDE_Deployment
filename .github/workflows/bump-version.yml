name: Bump Version

on:
  push:
    # This workflow runs whenever code is pushed to these branches,
    # which usually happens after merging a PR.
    branches:
      - develop
      - master

permissions:
  contents: write  # allows committing back to the repo

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Get Old Version
        id: get_version
        run: |
          # Look for a line like `version = "0.0.1"` in pyproject.toml.
          old_version=$(grep '^version *= *' pyproject.toml | sed 's/version *= *"//; s/"//')
          echo "old_version=$old_version" >> "$GITHUB_ENV"

      - name: Bump Version
        id: bump_version
        run: |
          # Extract the old version
          old_version="${{ env.old_version }}"
          IFS='.' read -r major minor patch <<< "$old_version"

          # Decide whether to increment patch (develop) or minor (master)
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            patch=$(( patch + 1 ))
          elif [ "${{ github.ref }}" = "refs/heads/master" ]; then
            minor=$(( minor + 1 ))
            patch=0
          fi

          # Construct new version
          new_version="$major.$minor.$patch"

          # Update version in pyproject.toml
          sed -i "s/version = \"$old_version\"/version = \"$new_version\"/" pyproject.toml

          # Export new version
          echo "new_version=$new_version" >> "$GITHUB_ENV"

      - name: Commit and Push Updated Version
        if: steps.bump_version.outcome == 'success'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Add and commit the change
          git add pyproject.toml
          # Include [skip ci] if you want to prevent re-triggering CI from this commit
          git commit -m "Bump version to ${{ env.new_version }}"

          # Push directly back to the branch that triggered the workflow
          git push origin HEAD:${{ github.ref_name }}
